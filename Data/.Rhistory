keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch")
###select the 'keep_columns' to create a new dataset
tea_time <- select(tea, one_of(keep_columns))
###look at the summaries and structure of the data
summary(tea_time)
head(tea_time)
str(tea_time)
###visualize the dataset
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch")
tea_time <- select(tea, one_of(keep_columns))
tea_time <- dplyr::select(tea, one_of(keep_columns))
summary(tea_time)
head(tea_time)
str(tea_time)
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
?gather
?gather
library(tidyr)
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
mca <- MCA(tea_time, graph = FALSE)
summary(mca)
plot(mca, invisible=c("quanti.sup"))
str(tea)
head(tea)
?tea
kable(summary(tea), caption = " Summary of the Tea data set")
ggpairs(tea, mapping = aes(, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
ggpairs(tea, mapping = aes(, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
gather(tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
head(tea)
pairs(tea)
ggpairs(tea)
gather(tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch")
tea_time <- dplyr::select(tea, one_of(keep_columns))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
str(tea)
str(tea_time)
data(tea)
data(tea)
str(tea)
dim(tea)
head(tea)
gather(tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
tea1 <- tea[1:18]
gather(tea1) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
tea2 <- tea[19:]
tea2 <- tea[19:max.col()]
tea2 <- tea[19:ncol(tea)]
gather(tea2) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch", "effect.on.healh", "friendliness", "sex")
tea_time <- dplyr::select(tea, one_of(keep_columns))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch", "effect.on.health", "friendliness", "sex")
tea_time <- dplyr::select(tea, one_of(keep_columns))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
mca <- MCA(tea_time, graph = FALSE)
summary(mca)
plot(mca, invisible=c("quanti.sup"))
keep_columns <- c("Tea", "How", "sugar", "effect.on.health", "friendliness")
tea_time <- dplyr::select(tea, one_of(keep_columns))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
mca <- MCA(tea_time, graph = FALSE)
summary(mca)
plot(mca, invisible=c("quanti.sup"))
?plot
plot(mca, invisible=c("quali.sup"))
plot(mca, invisible=c("quali.sup"))
plot(mca, invisible=c("quali.sup"), habillage="quali")
summary(pca_human)
summary(pca_human)
summary(pca_human_std)
# IODS Week 4
# Matti Lassila 13.11.2018
# Read the “Human development” and “Gender inequality” datas into R.
# Set up
library(httr)
library(data.table)
library(dplyr)
library(skimr)
library(here)
# Set the working directory
setwd(here("/data/"))
# Load data from the internet
url_hd <- "https://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv"
GET(url_hd, write_disk("human_development.csv", overwrite = TRUE))
url_gii <- "https://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv"
GET(url_gii, write_disk("gender_inequality.csv", overwrite = TRUE))
# Prepare column names for human development dataset
raw_data_hd <- fread("human_development.csv",nrows = 2)
column_names_hd <- tolower(colnames(raw_data_hd))
# Read full human development dataset in using proper columnnames
raw_data_hd <- fread(
"human_development.csv",
col.names = column_names_hd,
check.names = TRUE, na.strings = "..")
# Prepare column names for gender inequality dataset
raw_data_gii <- fread("gender_inequality.csv",nrows = 2)
column_names_gii <- tolower(colnames(raw_data_gii))
# Read full human development dataset in using proper columnnames
raw_data_gii <- fread(
"gender_inequality.csv",
col.names = column_names_gii,
check.names = TRUE, na.strings = "..")
# Explore the datasets: see the structure and dimensions of the data.
# Create summaries of the variables. (1 point)
dim(raw_data_hd)
dim(raw_data_gii)
skim(raw_data_hd)
skim(raw_data_gii)
# Look at the meta files and rename the variables with (shorter)
# descriptive names. (1 point)
hd_names <- c(
"hdi_rank",
"country",
"hdi",
"life_exp",
"edu_exp",
"edu_mean",
"gni",
"gni_hdi"
)
colnames(raw_data_hd) <- hd_names
gii_names <- c(
"gii_rank",
"country",
"gii",
"mat_mortality",
"birth_rate",
"repr_parlament",
"sec_edu_female",
"sec_edu_male",
"labour_rate_female",
"labour_rate_male"
)
colnames(raw_data_gii) <- gii_names
# Mutate the “Gender inequality” data and create two new variables.
# The first one should be the ratio of Female and Male populations
# with secondary education in each country. (i.e. edu2F / edu2M).
# The second new variable should be the ratio of
# labour force participation of females and males in each country
# (i.e. labF / labM). (1 point)
# Join together the two datasets using the variable
# Country as the identifier. Keep only the countries in both data sets
# (Hint: inner join).
human <- raw_data_gii %>%
mutate(
female_male_edu_ratio = sec_edu_female / sec_edu_male,
female_male_labour_ratio = labour_rate_female / labour_rate_male
) %>%
inner_join(raw_data_hd, by = "country")
# The joined data should have 195 observations and 19 variables.
dim(human)
# We are clear
# [1] 195 19
# Call the new joined data "human" and save it in your data folder. (1 point)
write.csv(human,"human.csv",row.names = FALSE)
# Housekeeping
gii_file <- "gender_inequality.csv"
hd_file <- "human_development.csv"
if (file.exists(gii_file)) file.remove(gii_file)
if (file.exists(hd_file)) file.remove(hd_file)
human
str(human)
# Emma Peltomaa
# 25.11.2018
# Reading two datasets from here:
# Human development, more information: http://hdr.undp.org/en/content/human-development-index-hdi
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
# Gender inequality, more infromation: http://hdr.undp.org/sites/default/files/hdr2015_technical_notes.pdf
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# Exploring both if the datasets:
dim(hd) # 195 rows/observations, 8 columns/variables
str(hd)
summary(hd)
dim(gii) # 195 rows/observations, 10 columns/variables
str(gii)
summary(gii)
# Renaming the variables
colnames(hd) <- c("hdir", "country", "hdi", "liex", "exyedu", "myedu", "gni", "gnir_hdir")
colnames(gii) <- c("giir", "country", "gii", "mamor", "adbir", "perep", "seduf", "sedum", "lfprf", "lfprm")
# Mutation of gii-data
library(dplyr)
gii <- mutate(gii, edur = seduf / sedum)
gii <- mutate(gii, lfpr = lfprf / lfprm)
# Joining the datasets
join_by <- c("country")
human <- inner_join(hd, gii, by = join_by)
# Saving the dataset
write.table(human, file = "human.csv")
View(human)
str(human)
# Antti Kääriälä
# 24 Nov 2018
#
# Data wrangling, week 4
# Preparing week 5 data.
#
# The data can be obatained from here:
# https://archive.ics.uci.edu/ml/datasets/Student+Performance
setwd("~/GitHub/IODS-project/data")
library(tidyverse)
# reading data
hd <- as_tibble(read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv",
stringsAsFactors = F))
gii <- as_tibble(read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv",
stringsAsFactors = F, na.strings = ".."))
# dimensions and structure of the data
hd # the data has 195 rows and 8 variables
gii # the data has 195 rows and 10 variables
str(hd)
str(gii)
# renaming variabels
names(hd)
hd <- hd %>%
rename(hdi_rank = HDI.Rank,
country = Country,
hdi = Human.Development.Index..HDI.,
life_expectancy = Life.Expectancy.at.Birth,
exp_education = Expected.Years.of.Education,
mean_education = Mean.Years.of.Education,
gni = Gross.National.Income..GNI..per.Capita,
gni_minus_hdi = GNI.per.Capita.Rank.Minus.HDI.Rank)
names(gii)
gii <- gii %>%
rename(gii_rank = GII.Rank,
country = Country,
gii = Gender.Inequality.Index..GII.,
maternal_mortality = Maternal.Mortality.Ratio,
teen_births = Adolescent.Birth.Rate,
repr_w = Percent.Representation.in.Parliament,
sec_edu_w = Population.with.Secondary.Education..Female.,
sec_edu_m  = Population.with.Secondary.Education..Male.,
labor_w = Labour.Force.Participation.Rate..Female.,
labor_m  = Labour.Force.Participation.Rate..Male.)
# mutating
# sex ratio with secondary education and
# labor force participation
gii <- gii %>%
mutate(edu_sex_ratio = sec_edu_w / sec_edu_m,
labor_sex_ratio = labor_w / labor_m)
# joihing the two data
human <- hd %>%
inner_join(gii, by = "country")
# saving the data
write.csv2(human, "human.rds")
str(human)
iris
str(iris)
fit1 <- lm(Sepal.Length ~ Sepal.Width, iris)
summary(fit1)
fit2 <- lm(Sepal.Length ~ Sepal.Width, iris$Species="setosa")
fit2 <- lm(Sepal.Length ~ Sepal.Width, iris$Species=="setosa")
setosa <- iris$Species=="setosa"
setosa
subset(iris, Species="setosa")
subset(iris, Species=="setosa")
setosa <- subset(iris, Species=="setosa")
fitset <- lm(Sepal.Length ~ Sepal.Width, setosa)
summary(fitset)
versicolor <- subset(iris, Species=="versicolor")
fitset <- lm(Sepal.Length ~ Sepal.Width, versicolor)
summary(fitver)
setosa <- subset(iris, Species=="setosa")
fitset <- lm(Sepal.Length ~ Sepal.Width, setosa)
summary(fitset)
versicolor <- subset(iris, Species=="versicolor")
fitver <- lm(Sepal.Length ~ Sepal.Width, versicolor)
summary(fitver)
virginica <- subset(iris, Species=="virginica)")
fitvir <- lm(Sepal.Length ~ Sepal.Width, virginica)
summary(fitvir)
virginica <- subset(iris, Species=="virginica")
fitvir <- lm(Sepal.Length ~ Sepal.Width, virginica)
summary(fitvir)
plot(iris$Sepal.Width, iris$Sepal.Width)
plot(iris$Sepal.Width, iris$Sepal.Length)
abline(fit1
abline(fit1)
fit1 <- lm(Sepal.Length ~ Sepal.Width, iris)
summary(fit1)
plot(iris$Sepal.Width, iris$Sepal.Length)
abline(fit1)
abline(fit1, lty)
?abline(fit1, lty)
?abline(fit1, lty=2)
abline(fit1, lty=2)
abline(fit1, lty="2")
abline(fit1, lty="3")
plot(iris$Sepal.Width, iris$Sepal.Length)
abline(fit1, lty="3")
abline(fit1, lty=3)
abline(fit1, lty=4)
plot(iris$Sepal.Width, iris$Sepal.Length, col=1)
plot(iris$Sepal.Width, iris$Sepal.Length, col=10)
plot(iris$Sepal.Width, iris$Sepal.Length, col="green")
plot(iris$Sepal.Width, iris$Sepal.Length, col=factor(iris$Species))
plot(iris$Sepal.Width, iris$Sepal.Length, col=factor("red", "green", "blue"))
plot(iris$Sepal.Width, iris$Sepal.Length, col=factor("red", "green", "blue"))
plot(iris$Sepal.Width, iris$Sepal.Length, col=factor("red", "green", "blue"))
abline(fit1, lty=3)
plot(iris$Sepal.Width, iris$Sepal.Length, col=("red", "green", "blue"))
plot(iris$Sepal.Width, iris$Sepal.Length, col=factor(iris$Species))
abline(fit1, lty=3)
plot(iris$Sepal.Width, iris$Sepal.Length, col=factor(iris$Species), legend())
plot(iris$Sepal.Width, iris$Sepal.Length, col=factor(iris$Species))
abline(fit1, lty=3)
iris_colors <- c("red", "blue", "green")
plot(iris$Sepal.Width, iris$Sepal.Length, col=factor(iris$Species))
abline(fit1, lty=3)
iris_colors <- c("red", "blue", "green")
iris_colors
plot(iris$Sepal.Width, iris$Sepal.Length, col=iris_colors[Species]
plot(iris$Sepal.Width, iris$Sepal.Length, col=iris_colors[Species])
plot(iris$Sepal.Width, iris$Sepal.Length, col=iris_colors[iris$Species])
legend("top", legend=levels(iris$Species), col=iris_colors, pch=1)
legend("topright", legend=levels(iris$Species), col=iris_colors, pch=1)
legend("topright", legend=levels(iris$Species), col=iris_colors, pch=1)
plot(iris$Sepal.Width, iris$Sepal.Length, col=factor(iris$Species))
abline(fit1, lty=3)
#B)
iris_colors <- c("red", "blue", "green")
plot(iris$Sepal.Width, iris$Sepal.Length, col=iris_colors[iris$Species])
legend("topright", legend=levels(iris$Species), col=iris_colors, pch=1)
abline(fitset, col="red")
abline(fit1, lty=3)
abline(fitset, col="red")
abline(fitset, col="blue")
abline(fitset, col="green")
abline(fitset, col="red")
abline(fitver, col="blue")
abline(fitvir, col="green")
rep(0, 10)
rep(0, nrow(iris))
setosa <- c(rep(0, nrow(iris)))
setosa
head(iris)
iris$setosa <- if(iris$Species="setosa")
iris$setosa <- if(iris$Species=="setosa")
iris
iris
iris[['Is.Versicolor']] <- as.numeric(iris[['Species']] == 'versicolor')
iris
iris
head(iris)
iris <- iris[,1:5]
head(iris)
iris[['Is.Versicolor']] <- as.numeric(iris[['Species']] == 'versicolor')
head(iris)
iris[['Is.Setosa']] <- as.numeric(iris[['Species']] == 'setosa')
iris[['Is.Versicolor']] <- as.numeric(iris[['Species']] == 'versicolor')
iris[['Is.Verginica']] <- as.numeric(iris[['Species']] == 'virginica')
head(iris)
setosa <-iris["Is.Setosa"]
source('C:/Users/pekka/Google Drive/01 MatLu/Tiltu2/Viikko_4_1.R', echo=TRUE)
setosa <- filter(setosa[,2>0])
setosa <- filter(setosa$Is.Setosa>0)
?filter
library(dplyr)
setosa <- filter(setosa$Is.Setosa>0)
setosa <- filter(setosa$Is.Setosa=="TRUE")
setosa <- filter(setosa$Is.Setosa="TRUE")
setosa <- filter(setosa$Is.Setosa=TRUE)
setosa <- c(rep(0, nrow(iris)))
dim(setosa)
str(setosa)
setosa <- c(rep(0, nrow(iris)))
str(setosa)
iris[['Is.Setosa']] <- as.numeric(iris[['Species']] == 'setosa')
iris[['Is.Versicolor']] <- as.numeric(iris[['Species']] == 'versicolor')
iris[['Is.Verginica']] <- as.numeric(iris[['Species']] == 'virginica')
head(iris)
setosa <-iris["Is.Setosa"]
str(setosa)
lm(iris$Sepal.Length ~ iris$Sepal.Width + setosa)
lm(Sepal.Length ~ Sepal.Width + Is.Setosa)
lm(Sepal.Length ~ Sepal.Width + Is.Setosa, iris)
fit2a <- lm(Sepal.Length ~ Sepal.Width + Is.Setosa, iris)
summary(fit2a)
summary(fit2a)
fit2b <- lm(Sepal.Length ~ Sepal.Width + Is.Setosa + Is.Versicolor + Is.Verginica, iris)
summary(fit2b)
setosa <- c(rep(0, nrow(iris)))
str(setosa)
iris[['Is.Setosa']] <- as.numeric(iris[['Species']] == 'setosa')
iris[['Is.Versicolor']] <- as.numeric(iris[['Species']] == 'versicolor')
iris[['Is.Verginica']] <- as.numeric(iris[['Species']] == 'virginica')
head(iris)
setosa <-iris["Is.Setosa"]
str(setosa)
#B)
fit2a <- lm(Sepal.Length ~ Sepal.Width + Is.Setosa, iris)
summary(fit2a)
#p-arvo sekä Sepal.Width:llä että setosa-dummy muuttujalla ovat erittäin merkitseviä, eli nollahypoteesit beta1=0 ja beta2=0 voidaan hylätä 5%:n ja
# 1%:n tasolla. Eli molemmat muuttujat selittävät hyvin lehden pituutta
#C)
fit2b <- lm(Sepal.Length ~ Sepal.Width + Is.Setosa + Is.Versicolor + Is.Verginica, iris)
summary(fit2b)
head(iris)
filter(iris$Is.Verginica=1)
filter(iris$Is.Verginica="1")
filter(iris$Is.Verginica=="1")
filter(iris$Is.Verginica==1)
filter(iris$Is.Verginica=TRUE)
filter(iris$Is.Verginica==TRUE)
filter(iris$Is.Verginica==1)
str(setosa)
str(iris)
filter(iris$Is.Verginica==1)
summary(fit2b)
tail(iris, 15)
fit2b <- lm(Sepal.Length ~ Sepal.Width  + Is.Versicolor + Is.Verginica, iris)
summary(fit2b)
fit2b <- lm(Sepal.Length ~ Sepal.Width + Is.Setosa + Is.Versicolor + Is.Verginica, iris)
summary(fit2b)
fit2b <- lm(Sepal.Length ~ Sepal.Width + Species, iris)
summary(fit2b
fit2b <- lm(Sepal.Length ~ Sepal.Width + Species, iris)
summary(fit2b)
fit2b <- lm(Sepal.Length ~ Sepal.Width + Species, iris)
summary(fit2b)
library(datasets)
USArrests
fit3 <- lm(Murder ~ Assault + UrbanPop + Rape, USArrests)
summary(fit3)
fit3b <- lm(Murder ~ Assault + UrbanPop, USArrests)
fit3b <- lm(Murder ~ Assault + UrbanPop, USArrests)
summary(fit3b)
uusi <- c("1" = 200, "2" = 0.5 "3" = 50)
uusi <- c("1" = 200, "2" = 0.5, "3" = 50)
uusi
predict(fit3b, newdata = uusi)
uusi <- c("Assault" = 200, "UrbanPop" = 0.5, "Rape" = 50)
uusi
predict(fit3b, newdata = uusi)
uusi <- data.frame(uusi)
predict(fit3b, newdata = uusi)
uusi
uusi <- c("Assault" = 200, "UrbanPop" = 0.5, "Rape" = 50)
uusi
uusi <- data.frame(1 = uusi)
uusi
predict(fit3b, newdata = uusi)
data.frame(Height=c(165,188,178), Sex=c("Female","Male","Female")
data.frame(Height=c(165,188,178), Sex=c("Female","Male","Female"))
data.frame(Height=c(165,188,178), Sex=c("Female","Male","Female"))
uusi <- data.frame(Assault=c(200), UrbanPop=c(0.5), Rape=c(50))
predict(fit3b, newdata = uusi)
predict(fit3b, newdata = uusi, ,interval="predict",level=0.95)
predict(fit3b, newdata = uusi, ,interval="predict",level=0.05)
asunto <- read.table("C:/Users/pekka/Google Drive/01 MatLu/Tiltu2/H3_t.csv", sep=",", header=TRUE)
asunto
asunto <- read.table("C:/Users/pekka/Google Drive/01 MatLu/Tiltu2/H3_t.csv", sep=",", header=TRUE)
asunto
asunto <- read.table("C:/Users/pekka/Google Drive/01 MatLu/Tiltu2/H3_t.csv", sep=",", header=TRUE)
asunto
plot(asunto$hinta, asunto$m2)
plot(asunto$m2, asunto$hinta)
m5<-lm(hinta ~ m2, asunto)
abline(m5)
summary(m5)
m5
matriisi <- read.table("C:/Users/pekka/Google Drive/01 MatLu/Tiltu2/H3_u.csv", sep=",", header=TRUE)
matriisi
matriisi <- read.table("C:/Users/pekka/Google Drive/01 MatLu/Tiltu2/H3_u.csv", sep=",", header=TRUE)
matriisi
is.matrix(matriisi)
as.matrix(matriisi)
matrix <-as.matrix(matriisi)
matrix
X <-as.matrix(matriisi)
X
t(X)
y<-c(121,165, 150, 170, 140)
X%*%t(X)
solve(t(X)%*%X)
(t(X)%*%X)
solve(t(X)%*%X)
X
X<-X[,2:6]
X
X<-X[,2:6]
solve(t(X)%*%X)
y<-c(121,165, 150, 170, 140)
solve(t(X)%*%X)%*%t(X)*y
malli <- read.table("C:/Users/pekka/Google Drive/01 MatLu/Tiltu2/H3_v.csv", sep=",", header=TRUE)
malli
m5<-lm(y ~ x1 + x2 + x3 + x4, malli)
summary(m5)
m5<-lm(y ~ x1 + x2, malli)
abline(m5)
summary(m5)
malli
m5<-lm(y ~ x1 + x2+ x3, malli)
summary(m5)
y<-c(121,165, 150, 170, 140)
matriisi <- read.table("C:/Users/pekka/Google Drive/01 MatLu/Tiltu2/H3_u.csv", sep=",", header=TRUE)
X <-as.matrix(matriisi)
X<-X[,2:6]
solve(t(X)%*%X)%*%t(X)*y
solve(t(X)%*%X)%*%t(X)%*%y
matriisi <- read.table("C:/Users/pekka/Google Drive/01 MatLu/Tiltu2/H3_u.csv", sep=",", header=TRUE)
X <-as.matrix(matriisi)
X<-X[,2:5]
solve(t(X)%*%X)%*%t(X)%*%y
matriisi <- read.table("C:/Users/pekka/Google Drive/01 MatLu/Tiltu2/H3_u.csv", sep=",", header=TRUE)
X <-as.matrix(matriisi)
X<-X[,2:6]
solve(t(X)%*%X)%*%t(X)%*%y
X
y
